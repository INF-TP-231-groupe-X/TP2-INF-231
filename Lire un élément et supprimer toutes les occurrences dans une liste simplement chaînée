#include <stdio.h>
#include <stdlib.h>

typedef struct Node {
    int data;
    struct Node* next;
} Node;

void insertEnd(Node** head, int data) {
    Node* newNode = malloc(sizeof(Node));
    newNode->data = data;
    newNode->next = NULL;
    if (*head == NULL) *head = newNode;
    else {
        Node* temp = *head;
        while (temp->next) temp = temp->next;
        temp->next = newNode;
    }
}

void deleteOccurrences(Node** head, int val) {
    while (*head && (*head)->data == val) {
        Node* temp = *head;
        *head = (*head)->next;
        free(temp);
    }
    Node* cur = *head;
    while (cur && cur->next) {
        if (cur->next->data == val) {
            Node* temp = cur->next;
            cur->next = cur->next->next;
            free(temp);
        } else cur = cur->next;
    }
}

void printList(Node* head) {
    while (head) {
        printf("%d ", head->data);
        head = head->next;
    }
    printf("\n");
}

int main() {
    Node* head = NULL;
    int n, val, x;
    scanf("%d", &n);
    for (int i = 0; i < n; i++) {
        scanf("%d", &x);
        insertEnd(&head, x);
    }
    scanf("%d", &val);
    deleteOccurrences(&head, val);
    printList(head);
    return 0;
}